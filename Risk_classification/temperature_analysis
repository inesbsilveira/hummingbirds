// Apply threshold to the averaged collection (make sure averaged_collection is defined)
var colThreshold = averaged_collection.map(function (image) {
  // Identify pixels above 32°C (thresholdK in Kelvin)
  var thresholdImage = image.gt(thresholdK);
  return thresholdImage.set('system:time_start', image.get('system:time_start'));
});

// Now, aggregate by day: We need to reduce over the region and get 1 if any pixel exceeds the threshold for that day
var countDaysAbove32 = colThreshold.map(function(image) {
  // Check if at least one pixel in the region is above 32°C
  var mask = image.reduceRegion({
    reducer: ee.Reducer.anyNonZero(),
    geometry: region,
    scale: 1000, // Adjust scale based on your dataset resolution
    maxPixels: 1e8
  });

  // Set 'day_above_32' to 1 if any pixel exceeded the threshold
  var isAbove = ee.Algorithms.If(mask.get('temperature_2m'), 1, 0);

  return ee.Feature(null, {
    'date': image.get('system:time_start'),
    'day_above_32': isAbove
  });
});

// Convert to FeatureCollection for easier analysis
var daysAbove32FC = ee.FeatureCollection(countDaysAbove32);

// Sum the number of hot hours (days with at least one pixel above 32°C)
var totalHotHours = daysAbove32FC.aggregate_sum('day_above_32');

// Divide the total hot hours by 24 to get the number of days
var totalDaysAbove32 = totalHotHours.divide(24);

// Output the total number of days with at least one pixel above 32°C
print('Total number of days with at least one pixel above 32°C:', totalDaysAbove32);
