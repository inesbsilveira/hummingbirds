// average of extreme heat days per year

// Import shapefile from GEE assets
var project_area = ee.FeatureCollection(table);

// Define the temperature threshold for extreme heat
var tempThreshold = 32; // Degrees Celsius

// Load NASA GDDP-CMIP6 dataset (daily near-surface temperature)
var dataset = ee.ImageCollection("NASA/GDDP-CMIP6")
  .filterBounds(project_area)
  .filterDate('2041-01-01', '2041-12-31')
  .select('tas'); // Use 'tas' (temperature in Kelvin)

// Convert temperature from Kelvin to Celsius
var datasetCelsius = dataset.map(function(image) {
  return image.subtract(273.15).rename('tas')
    .copyProperties(image, ['system:time_start']); // Keep timestamp metadata
});

// Ensure all images have a valid time property
datasetCelsius = datasetCelsius.filter(ee.Filter.notNull(['system:time_start']));

// Identify days where temperature exceeds 32째C
var extremeHeatDays = datasetCelsius.map(function(image) {
  var mask = image.gt(tempThreshold).rename('extreme_heat'); // 1 if >32째C, else 0
  return mask.set('year', ee.Date(image.get('system:time_start')).get('year')); // Add year property
});

// Group by year and sum extreme heat days
var yearlyExtremeHeatDays = ee.ImageCollection(
  ee.List.sequence(2041, 2070).map(function(y) {
    var year = ee.Number(y);
    var yearCollection = extremeHeatDays.filter(ee.Filter.eq('year', year));
    var sumImage = yearCollection.sum().rename('heat_days').set('year', year);
    return sumImage;
  })
);

// Convert ImageCollection to FeatureCollection with year-wise counts
var heatDaysFC = yearlyExtremeHeatDays.map(function(image) {
  var year = image.get('year');

  // Use first() to ensure we have data, then get 'heat_days'
  var heatDays = ee.Number(image.reduceRegion({
    reducer: ee.Reducer.mean(), 
    geometry: project_area.geometry(),
    scale: 50000, // Adjust scale to match dataset resolution
    maxPixels: 1e9
  }).get('heat_days', 0)); // Default to 0 if missing

  return ee.Feature(null, {'year': year, 'heat_days': heatDays});
}).filter(ee.Filter.notNull(['heat_days'])); // Remove any null values

// Compute the 30-year mean of extreme heat days per year
var avgExtremeHeatDays = heatDaysFC.aggregate_mean('heat_days');

// Classify risk based on the average yearly extreme heat days
var riskLevel = ee.Algorithms.If(
  avgExtremeHeatDays.lt(90), 'Low risk',
  ee.Algorithms.If(avgExtremeHeatDays.lte(180), 'Medium risk', 'High risk')
);

// Print results
print('Average extreme heat days per year (2041-2070):', avgExtremeHeatDays);
print('Risk Level:', riskLevel);

// Visualize total extreme heat days as a spatial heatmap
var extremeHeatSum = extremeHeatDays.sum().clip(project_area);
var visParams = {
  min: 0,
  max: 200, // Adjust as needed
  palette: ['blue', 'yellow', 'red']
};

Map.centerObject(project_area, 6);
Map.addLayer(extremeHeatSum, visParams, 'Total Extreme Heat Days (2041-2070)');
Map.addLayer(project_area, {}, 'Project Area');

//
//
//
// just for 2041

// Import shapefile from GEE assets
var project_area = ee.FeatureCollection(table2);

// Define the temperature threshold for extreme heat
var tempThreshold = 32; // Degrees Celsius

// Load NASA GDDP-CMIP6 dataset (daily near-surface temperature) for 2041
var dataset = ee.ImageCollection("NASA/GDDP-CMIP6")
  .filterBounds(project_area)
  .filterDate('2041-01-01', '2041-12-31')  // Filter for the year 2041
  .select('tas'); // Use 'tas' (temperature in Kelvin)

// Convert temperature from Kelvin to Celsius
var datasetCelsius = dataset.map(function(image) {
  return image.subtract(273.15).rename('tas')
    .copyProperties(image, ['system:time_start']); // Keep timestamp metadata
});

// Ensure all images have a valid time property
datasetCelsius = datasetCelsius.filter(ee.Filter.notNull(['system:time_start']));

// Identify days where temperature exceeds 32째C
var extremeHeatDays = datasetCelsius.map(function(image) {
  var mask = image.gt(tempThreshold).rename('extreme_heat'); // 1 if >32째C, else 0
  return mask.set('year', ee.Date(image.get('system:time_start')).get('year')); // Add year property
});

// Sum extreme heat days for the year 2041
var heatDaysForYear = extremeHeatDays.sum().rename('heat_days');

// Compute the total number of extreme heat days for 2041 within the project area
var heatDaysCount = heatDaysForYear.reduceRegion({
  reducer: ee.Reducer.sum(), 
  geometry: project_area.geometry(),
  scale: 50000,  // Adjust scale based on dataset resolution
  maxPixels: 1e9
}).get('heat_days');

// Print the total number of extreme heat days for 2041
print('Total extreme heat days for 2041:', heatDaysCount);

// Visualize total extreme heat days as a spatial heatmap
var extremeHeatSum = extremeHeatDays.sum().clip(project_area);
var visParams = {
  min: 0,
  max: 200, // Adjust as needed
  palette: ['blue', 'yellow', 'red']
};

Map.centerObject(project_area, 6);
Map.addLayer(extremeHeatSum, visParams, 'Total Extreme Heat Days (2041)');
Map.addLayer(project_area, {}, 'Project Area');
