// Load the shapefile (assuming it's uploaded to your GEE assets).
var shapefile = ee.FeatureCollection(table);

// Load the flood event data from the MODIS Global Flood Database (GFD).
var gfd = ee.ImageCollection('GLOBAL_FLOOD_DB/MODIS_EVENTS/V1');

// Load JRC permanent water mask
var jrc = ee.ImageCollection('JRC/GSW1_4/YearlyHistory')
  .select('waterClass')
  .map(function(img) {
    return img.eq(3); // Permanent water class
  })
  .max(); // Create a composite to get max extent of permanent water

// Set map options to a good view of your shapefile area.
Map.setOptions('SATELLITE');
Map.centerObject(shapefile, 9); // Adjust zoom level as needed

// Function to count valid flood events in each year
var years = ee.List.sequence(2000, 2018); // Adjust year range based on data availability

var floodCounts = years.map(function(year) {
  var startDate = ee.Date.fromYMD(year, 1, 1);
  var endDate = ee.Date.fromYMD(year, 12, 31);
  
  // Filter flood images by year
  var yearlyFloods = gfd.filterDate(startDate, endDate)
    .select('flooded')
    .map(function(img) {
      var floodMask = img.gt(0); // Flooded pixels
      var validFlood = floodMask.and(jrc.not()); // Exclude permanent water
      return validFlood;
    })
    .sum()
    .gt(0); // Convert to binary flood occurrence per year
  
  // Clip to shapefile
  var clippedFlood = yearlyFloods.clip(shapefile);
  
  // Count flood pixels in the shapefile area
  var floodCheck = clippedFlood.reduceRegion({
    reducer: ee.Reducer.sum(),
    geometry: shapefile.geometry(),
    scale: 500,
    maxPixels: 1e8
  });
  
  return ee.Feature(null, {year: year, flood_count: floodCheck.get('flooded')});
});



// Convert to FeatureCollection for easier visualization
var floodCountsFC = ee.FeatureCollection(floodCounts);

// Check if any floods were detected across all years
var totalFloods = floodCountsFC.aggregate_sum('flood_count');

// Print flood detection result
totalFloods.evaluate(function(floodSum) {
  if (floodSum > 0) {
    print('Floods detected in the project area');
  } else {
    print('No floods detected in the project area');
  }
});

// Print the results
print('Number of flood events per year in the shapefile (excluding JRC permanent water):', floodCountsFC);

// Create a flood mask to identify flooded areas.
var floodMask = gfd.select('flooded').sum().gt(0); // 1 if flooded, 0 if not flooded.

Map.addLayer(
  floodMask.selfMask(),
  {min: 0, max: 1, palette: ['black', 'blue']},
  'Flood Extent (Any Event)'
);

// Add layers to the map for visualization
Map.addLayer(shapefile, {}, 'Shapefile Boundary');
Map.addLayer(jrc.selfMask(), {palette: 'red'}, 'JRC Permanent Water');

